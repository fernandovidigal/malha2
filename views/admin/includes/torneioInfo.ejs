<div class="formInput__wrapper">
    <label for="designacao" class="inputLabel">Nome do Torneio <span class="labelRequiredField">*</span></label>
    <input type="text" name="designacao" id="designacao" size="80" required value="<%= torneio.designacao %>" 
        <%= !activeConnection ? 'disabled' : '' %>
        <% 
            if(typeof validationErrors != 'undefined'){
                const erro = validationErrors.find(el => el.param === 'designacao');
                if(erro){
        %>
                    class="inputError"
                <% } %>
        <% } %>
    >
    <% 
        if(typeof validationErrors != 'undefined'){
            const erro = validationErrors.find(el => el.param === 'designacao');
            if(erro){
    %>
                <p class="inputErrorMsg">
                    <%= erro.msg %>
                </p>
            <% } %>
    <% } %>
</div>
<div class="formInput__wrapper">
    <label for="localidade" class="inputLabel">Localidade <span class="labelRequiredField">*</span></label>
    <input type="text" name="localidade" id="localidade" pattern="^[^0-9]+$" required size="40" value="<%= torneio.localidade %>"
        <%= !activeConnection ? 'disabled' : '' %>
        <%
            if(typeof validationErrors != 'undefined'){
                const erro = validationErrors.find(el => el.param === 'localidade');
                if(erro){
        %>
                    class="inputError"
                <% } %>
        <% } %>
    >
    <% 
        if(typeof validationErrors != 'undefined'){
            const erro = validationErrors.find(el => el.param === 'localidade');
            if(erro){
    %>
                <p class="inputErrorMsg">
                    <%= erro.msg %>
                </p>
            <% } %>
    <% } %>
</div>
<div class="formInput__wrapper">
    <label for="ano" class="inputLabel">Ano <span class="labelRequiredField">*</span></label>
    <input type="text" name="ano" id="ano" maxlength="4" pattern="^[0-9]{4}$" required value="<%= torneio.ano %>" placeholder="Ex: 2019"
        <%= !activeConnection ? 'disabled' : '' %>
        <% 
            if(typeof validationErrors != 'undefined'){
                const erro = validationErrors.find(el => el.param === 'ano');
                if(erro){
        %>
                    class="inputError"
                <% } %>
        <% } %>
    >
    <% 
        if(typeof validationErrors != 'undefined'){
            const erro = validationErrors.find(el => el.param === 'ano');
            if(erro){
    %>
                <p class="inputErrorMsg">
                    <%= erro.msg %>
                </p>
            <% } %>
    <% } %>
</div>